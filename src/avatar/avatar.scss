@use "../sass/abstract/abstract" as caral;
@use "sass:map";


@mixin avatar-sice($size){
  height: $size;
  width: $size;
  max-height: $size;
  max-width: $size;
  font-size: calc($size / 2);
  padding: calc($size / 4);
}

@mixin avatar-color($bgcolor, $color){
  background-color: $bgcolor; 
  color: $color;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 900;
  text-transform: uppercase;
  path{
    fill: $color;
  }

}

@mixin avart(){
  background-size: contain;  
  border-radius: 50%;
}

.avatar{
  @include avart( );
  
}


@each $color-name, $color-value in caral.$base {
  .avatar-#{$color-name} {
    @include avart();
    @include avatar-color($color-value, caral.$flat-white-ligth);
  }
}

@each $size-name, $size-value in caral.$avatar-sice{
  .avatar-#{$size-name} {
    @include avatar-sice($size-value );
  }
}


.avatar-ligth{
  @include avart();
  @include avatar-color(caral.$flat-white-ligth, caral.$carbon-ligth);
}
.avatar-outline{
  @include avart();
  border: 1px solid caral.$carbon-ligth;
  @include avatar-color(transparent , caral.$carbon-ligth);
  
}

.edit-avatar{
  position: relative;
  width: fit-content;
  .edit-avatar-btn{
    position: absolute;
    bottom: -5px;
    right: -5px;
    width: caral.$icon-md;
    height: caral.$icon-md;
    display: flex;
    justify-content: center;
    align-items: center;
    background: map.get(caral.$base, "info");
    border-radius: 50%;
    box-shadow: 0 0 15px 0 rgba($color: map.get(caral.$ligth, "carbon"), $alpha: .5);
  }
}

.avatar-stack{
  display: flex;
  
  div{
    margin-left: -25px;
    box-shadow: 0 0 15px 0 rgba($color: map.get(caral.$ligth, "carbon"), $alpha: .5);
  }
}

.avatar-mising{
  @include avart();
  @include avatar-color( map.get(caral.$ligth, "hard") , map.get(caral.$ligth, "flat-white")); ;

  font-size: 1.2em;
}